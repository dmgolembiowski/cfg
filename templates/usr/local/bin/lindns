#!/bin/sh
#
# Query and update Linode DNS

U='https://api.linode.com/v4'
TOKEN='{{ linode.token }}'

c() {
	local p=$1
	shift
	curl -s "$@" \
		-H 'Accept: application/json' \
		-H 'Content-Type: application/json' \
		-H "Authorization: Bearer $TOKEN" \
		$U/$p
}

id() {
	c domains | jq -r ".data[] | select(.domain == \"$1\") | .id"
}

records() {
	c domains/$(id $1)/records
}

_list() {
	records "$@" | jq '.data'
}

_get() {
	local d="$1"
	local t="$2"
	local n="$3"
	records $d |
		jq ".data[] |
			select(.type==\"$t\") |
			select(.name==\"$n\")"
}

_del() {
	local d="$1"
	local t="$2"
	local n="$3"
	local rid=$(_get "$@" | jq -r '.id')

	if [ "$rid" ]; then
		c domains/$(id $d)/records/$rid -X DELETE |
			jq .
	fi
}

verify() {
	local d="$1"
	local t="$2"
	local n="$3"
	local v="$4"
	local fqdn="$n.$d"

	# TODO: increase verification support for other records
	[ "$t" = TXT ] || return 0

	drill $t $fqdn | grep -q "^$fqdn\..*IN.*$t.*\"$v\""
}

_set() {
	local d="$1"
	local t="$2"
	local n="$3"
	local v="$4"
	local rid=$(_get "$@" | jq -r '.id')
	local json="{
		\"type\": \"$t\",
		\"name\": \"$n\",
		\"target\": \"$v\",
		\"ttl_sec\": 300
	}"


	{
		if [ "$rid" ]; then
			c domains/$(id $d)/records/$rid \
				-X PUT \
				-d "$json"

		else
			c domains/$(id $d)/records \
				-X POST \
				-d "$json"
		fi
	} | jq .

	printf 'Verifying '
	while :; do
		if verify "$@"; then
			break
		fi
		printf .
		sleep 60
	done
}

cmd=$1
shift

case "$cmd" in
	list|get|del|set)
		_$cmd "$@"
		;;
	*)
		2>&1 cat <<-EOF
		$(basename $0) <list|get|set> [options]
		    list domain
		    get domain type name
		    del domain type name
		    set domain type name value
		EOF
		exit 1
		;;
esac
